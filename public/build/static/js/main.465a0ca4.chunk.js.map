{"version":3,"sources":["types/page.ts","hooks/useTypedSelector.ts","components/PortalHeader.tsx","types/myaccountpage.ts","types/snackbar.ts","store/action-creators/myAccountPage.ts","types/linkspage.ts","store/action-creators/linksPage.ts","types/mainpage.ts","store/action-creators/mainPage.ts","types/account.ts","store/action-creators/account.ts","types/calendarpage.ts","store/action-creators/calendarPage.ts","store/action-creators/Snackbar.ts","store/action-creators/index.ts","hooks/auseActions.ts","pages/PagePortal.tsx","pages/PageLinks.tsx","pages/PageMyAccount.tsx","pages/PageCalendar.tsx","pages/PageDocuments.tsx","components/Portal.tsx","components/SuccessSnackbar.tsx","components/ErrorNotification.tsx","components/InfoNotification.tsx","App.tsx","store/reducers/accountReducer.ts","store/reducers/CalendarPageReducer.ts","store/reducers/LinksPageReducer.ts","store/reducers/MainPageReducer.ts","store/reducers/MyAccountPageReducer.ts","store/reducers/PageReducer.ts","store/reducers/SnackbarReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["PageActionTypes","useTypedSelector","useSelector","PortalHeader","state","account","firstName","lastName","email","profilePicture","loading","error","className","src","alt","xmlns","width","height","viewBox","fill","d","MyAccountPageActionTypes","SnackbarActionTypes","LinksPageActionTypes","fetchMyAccountPage","dispatch","a","type","FETCH_MY_ACCOUNT_PAGE","axios","get","setTimeout","FETCH_MY_ACCOUNT_PAGE_SUCCESS","payload","SNACKBAR_INFO","FETCH_MY_ACCOUNT_PAGE_FAIL","SNACKBAR_ERROR","updateMyAccountPage","data","password","UPDATE_MY_ACCOUNT_PAGE","post","UPDATE_MY_ACCOUNT_PAGE_SUCCESS","SNACKBAR_SUCCESS","UPDATE_MY_ACCOUNT_PAGE_FAIL","MainPageActionTypes","fetchLinksPage","FETCH_LINKS_PAGE","FETCH_LINKS_PAGE_SUCCESS","img","description","url","FETCH_LINKS_PAGE_FAIL","AccountActionTypes","fetchMainPage","FETCH_MAIN_PAGE","FETCH_MAIN_PAGE_SUCCESS","title","subtitle","textArray","FETCH_MAIN_PAGE_FAIL","CalendarPageActionTypes","fetchAccount","FETCH_ACCOUNT","FETCH_ACCOUNT_SUCCESS","FETCH_ACCOUNT_FAIL","fetchCalendarPage","FETCH_CALENDAR_PAGE","FETCH_CALENDAR_PAGE_SUCCESS","date","color","FETCH_CALENDAR_PAGE_FAIL","showSuccessSnackbar","message","showErrorSnackbar","showInfoSnackbar","clearSnackbar","SNACKBAR_CLEAR","MyAccountPageActionCreators","LinksPageActionCreators","MainPageActionCreators","AccountActionCreators","CalendarPageActionCreators","SnackbarActionCreators","useActions","useDispatch","bindActionCreators","ActionCreators","useStyles","makeStyles","theme","h1","fontSize","fontWeight","marginBottom","textAlign","h5","p","PagePortal","classes","mainPage","useEffect","map","textLine","index","PageLinks","linksPage","links","UNMOUNT_LINKS_PAGE","Table","size","aria-label","TableHead","TableRow","TableCell","TableBody","row","component","scope","Button","variant","onClick","e","preventDefault","window","open","formControl","spacing","paddingLeft","paddingRight","helper","position","bottom","left","legend","button","progress","top","emailREGEX","passwordREGEX","RegExp","PageMyAccount","myAccountPage","useState","validFN","setValidFN","validLN","setValidLN","validE","setValidE","validP","setValidP","validNP","setvalidNP","validCNP","setValidCNP","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","handleUpdate","event","label","target","UPDATE_EMAIL","value","UPDATE_LAST_NAME","UPDATE_FIRST_NAME","length","test","String","toLowerCase","noValidate","CircularProgress","Grid","container","item","xs","sm","FormControl","fullWidth","required","InputLabel","htmlFor","OutlinedInput","labelWidth","id","onInput","FormHelperText","disabled","console","log","zIndex","PageCalendar","calendarPage","events","showModal","setShowModal","setEvent","closeModal","plugins","dayGridPlugin","interactionPlugin","listPlugin","initialView","headerToolbar","center","right","eventClick","extendedProps","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","PageDocuments","TabPanel","props","children","other","role","hidden","a11yProps","Portal","pageNumber","page","Tabs","orientation","onChange","newValue","SWITCH_TAB","TabIndicatorProps","style","display","Tab","Alert","elevation","SuccessNotification","snackbar","successSnackbarOpen","successSnackbarMessage","handleClose","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","ErrorNotification","errorSnackbarOpen","errorSnackbarMessage","InfoNotification","infoSnackbarOpen","infoSnackbarMessage","createTheme","palette","primary","main","App","ThemeProvider","initialState","rootReducer","combineReducers","action","UPDATE_MESSAGE","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.465a0ca4.chunk.js","sourcesContent":["export interface PageState {\r\n pageNumber: number\r\n}\r\n\r\nexport enum PageActionTypes {\r\n SWITCH_TAB = 'SWITCH_TAB',\r\n}\r\ninterface SwitchPageAction {\r\n type: PageActionTypes.SWITCH_TAB,\r\n payload: number\r\n}\r\n\r\nexport type pageAction = SwitchPageAction\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store/reducers\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React from 'react'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\n\r\nconst PortalHeader: React.FC = () => {\r\n const { firstName, lastName, email, profilePicture, loading, error } = useTypedSelector(state => state.account)\r\n return (\r\n  <div className={`portal__user-info ${loading ? 'loading' : ''}`}>\r\n    \r\n   <div className='portal__user-avatar mb-24'>\r\n    {!loading && <img src={profilePicture} alt={firstName + lastName} />}\r\n    <a className=\"portal__user-edit\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\r\n          <path d=\"M3.02526 12.5568L7.44727 16.9763L16.2481 8.17045L11.8261 3.75095L3.02526 12.5568Z\" fill=\"#2D3134\"></path>\r\n          <path d=\"M19.6341 3.01762L16.9827 0.366211C16.7401 0.123594 16.4227 0.00160156 16.1051 0H16.0919C15.7743 0.00160156 15.4573 0.123594 15.2153 0.366211L13.4453 2.13383L17.8665 6.55262L19.6342 4.785C19.8768 4.54238 19.9988 4.22539 20.0004 3.90781V3.89461C19.9987 3.57719 19.8767 3.2602 19.6341 3.01762Z\" fill=\"#2D3134\"></path>\r\n          <path d=\"M0 20L5.745 18.6738L1.32379 14.255L0 20Z\" fill=\"#2D3134\"></path>\r\n      </svg>\r\n    </a>\r\n   </div>\r\n   <h4 className='portal__user-name mb-6'>\r\n    {firstName} {lastName} {loading && '...'}\r\n   </h4>\r\n   <p className='portal__user-email'>{email} {loading && '...'}</p>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PortalHeader\r\n","import { SnackbarOrigin } from \"@material-ui/core\";\r\n\r\nexport interface myAccountPageState {\r\n firstName: string\r\n lastName: string\r\n email: string\r\n profilePicture: string\r\n loading: boolean\r\n message: string\r\n error: null | string\r\n}\r\n\r\nexport interface SnackState extends SnackbarOrigin {\r\n  open: boolean\r\n}\r\n\r\nexport enum MyAccountPageActionTypes {\r\n FETCH_MY_ACCOUNT_PAGE = 'FETCH_MY_ACCOUNT_PAGE',\r\n FETCH_MY_ACCOUNT_PAGE_SUCCESS = 'FETCH_MY_ACCOUNT_PAGE_SUCCESS',\r\n FETCH_MY_ACCOUNT_PAGE_FAIL = 'FETCH_MY_ACCOUNT_PAGE_FAIL',\r\n UPDATE_MY_ACCOUNT_PAGE = 'UPDATE_MY_ACCOUNT_PAGE',\r\n UPDATE_MY_ACCOUNT_PAGE_SUCCESS = 'UPDATE_MY_ACCOUNT_PAGE_SUCCESS',\r\n UPDATE_MY_ACCOUNT_PAGE_FAIL = 'UPDATE_MY_ACCOUNT_PAGE_FAIL',\r\n UPDATE_FIRST_NAME = 'UPDATE_FIRST_NAME',\r\n UPDATE_LAST_NAME = 'UPDATE_LAST_NAME',\r\n UPDATE_EMAIL = 'UPDATE_EMAIL',\r\n UPDATE_MESSAGE = 'UPDATE_MESSAGE'\r\n}\r\n\r\ninterface UpdateFirstName {\r\n type: MyAccountPageActionTypes.UPDATE_FIRST_NAME\r\n payload: string\r\n}\r\n\r\ninterface UpdateLastName {\r\n type: MyAccountPageActionTypes.UPDATE_LAST_NAME\r\n payload: string\r\n}\r\n\r\ninterface UpdateEmail {\r\n type: MyAccountPageActionTypes.UPDATE_EMAIL\r\n payload: string\r\n}\r\n\r\ninterface FetchMyAccountPageAction {\r\n type: MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE\r\n}\r\n\r\ninterface FetchMyAccountPageSuccessAction {\r\n type: MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE_SUCCESS\r\n payload: {\r\n  firstName: string\r\n  lastName: string\r\n  email: string\r\n  profilePicture: string\r\n }\r\n}\r\n\r\ninterface FetchMyAccountPageFailAction {\r\n type: MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE_FAIL\r\n payload: string\r\n}\r\n\r\ninterface UpdateMyAccountPageAction {\r\n type: MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE\r\n}\r\n\r\ninterface UpdateMyAccountPageSuccessAction {\r\n type: MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE_SUCCESS\r\n}\r\n\r\ninterface UpdateMyAccountPageFailAction {\r\n type: MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE_FAIL\r\n payload: string\r\n}\r\n\r\ninterface UpdateMessage {\r\n  type: MyAccountPageActionTypes.UPDATE_MESSAGE\r\n  payload: string\r\n}\r\n\r\nexport type myAccountPageAction =\r\n | FetchMyAccountPageAction\r\n | FetchMyAccountPageSuccessAction\r\n | FetchMyAccountPageFailAction\r\n | UpdateMyAccountPageAction\r\n | UpdateMyAccountPageSuccessAction\r\n | UpdateMyAccountPageFailAction\r\n | UpdateFirstName\r\n | UpdateLastName\r\n | UpdateEmail\r\n | UpdateMessage\r\n","export interface SnackbarState {\r\n successSnackbarOpen: boolean\r\n errorSnackbarOpen: boolean\r\n infoSnackbarOpen: boolean\r\n successSnackbarMessage: string\r\n errorSnackbarMessage: string\r\n infoSnackbarMessage: string\r\n}\r\n\r\nexport enum SnackbarActionTypes {\r\n SNACKBAR_SUCCESS = 'SNACKBAR_SUCCESS',\r\n SNACKBAR_ERROR = 'SNACKBAR_ERROR',\r\n SNACKBAR_INFO = 'SNACKBAR_INFO',\r\n SNACKBAR_CLEAR = 'SNACKBAR_CLEAR',\r\n}\r\n\r\ninterface SnackbarSuccessAction {\r\n type: SnackbarActionTypes.SNACKBAR_SUCCESS\r\n payload: string\r\n}\r\n\r\ninterface SnackbarErrorAction {\r\n type: SnackbarActionTypes.SNACKBAR_ERROR\r\n payload: string\r\n}\r\n\r\ninterface SnackbarInfoAction {\r\n type: SnackbarActionTypes.SNACKBAR_INFO\r\n payload: string\r\n}\r\n\r\ninterface SnackbarClearAction {\r\n type: SnackbarActionTypes.SNACKBAR_CLEAR\r\n}\r\n\r\nexport type snackbarAction = SnackbarSuccessAction | SnackbarErrorAction | SnackbarInfoAction | SnackbarClearAction\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport { myAccountPageAction, MyAccountPageActionTypes } from '../../types/myaccountpage'\r\nimport { snackbarAction, SnackbarActionTypes } from '../../types/snackbar'\r\n\r\nexport const fetchMyAccountPage = () => {\r\n return async (dispatch: Dispatch<myAccountPageAction | snackbarAction>) => {\r\n  try {\r\n   dispatch({ type: MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE })\r\n   const response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n   setTimeout(() => {\r\n    dispatch({\r\n     type: MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE_SUCCESS,\r\n     payload: {\r\n      firstName: 'Prosvit',\r\n      lastName: 'Design',\r\n      email: 'test@prosvit.design',\r\n      profilePicture: 'black-printer-and-ink-cartridges-PK2TQCX.jpg',\r\n     },\r\n    })\r\n    dispatch({ type: SnackbarActionTypes.SNACKBAR_INFO, payload: 'Account Loaded' })\r\n   }, 2000)\r\n  } catch (error) {\r\n   dispatch({ type: MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE_FAIL, payload: 'Loading My Account Page Error' })\r\n   dispatch({ type: SnackbarActionTypes.SNACKBAR_ERROR, payload: 'Loading My Account Page Error' })\r\n  }\r\n }\r\n}\r\n\r\nexport const updateMyAccountPage = (\r\n data = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  profilePicture: '',\r\n  password: '',\r\n }\r\n) => {\r\n return async (dispatch: Dispatch<myAccountPageAction | snackbarAction>) => {\r\n  try {\r\n   dispatch({ type: MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE })\r\n   const response = await axios.post('https://jsonplaceholder.typicode.com/posts', data)\r\n\r\n   setTimeout(() => {\r\n    dispatch({ type: MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE_SUCCESS })\r\n    dispatch({ type: SnackbarActionTypes.SNACKBAR_SUCCESS, payload: 'Changes Saved' })\r\n   }, 2000)\r\n  } catch (error) {\r\n   dispatch({ type: MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE_FAIL, payload: 'Updating My Account Page Error' })\r\n   dispatch({ type: SnackbarActionTypes.SNACKBAR_ERROR, payload: 'Updating My Account Page Error' })\r\n  }\r\n }\r\n}\r\n","export interface linkObject {\r\n img: string\r\n description: string\r\n url: string\r\n}\r\n\r\nexport interface linksPageState {\r\n links: linkObject[]\r\n loading: boolean\r\n error: null | string\r\n}\r\n\r\nexport enum LinksPageActionTypes {\r\n FETCH_LINKS_PAGE = 'FETCH_LINKS_PAGE',\r\n FETCH_LINKS_PAGE_SUCCESS = 'FETCH_LINKS_PAGE_SUCCESS',\r\n FETCH_LINKS_PAGE_FAIL = 'FETCH_LINKS_PAGE_FAIL',\r\n UNMOUNT_LINKS_PAGE = 'UNMOUNT_LINKS_PAGE'\r\n}\r\n\r\ninterface FetchLinksPageAction {\r\n type: LinksPageActionTypes.FETCH_LINKS_PAGE\r\n}\r\n\r\ninterface FetchLinksPageSuccessAction {\r\n type: LinksPageActionTypes.FETCH_LINKS_PAGE_SUCCESS\r\n payload: linkObject[]\r\n}\r\n\r\ninterface FetchLinksPageFailAction {\r\n type: LinksPageActionTypes.FETCH_LINKS_PAGE_FAIL\r\n payload: string\r\n}\r\n\r\ninterface UnmountLinksPageAction {\r\n  type: LinksPageActionTypes.UNMOUNT_LINKS_PAGE\r\n}\r\n\r\nexport type linksPageAction = FetchLinksPageAction | FetchLinksPageSuccessAction | FetchLinksPageFailAction | UnmountLinksPageAction\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport { linksPageAction, LinksPageActionTypes } from '../../types/linkspage'\r\nimport { snackbarAction, SnackbarActionTypes } from '../../types/snackbar'\r\n\r\nexport const fetchLinksPage = () => {\r\n return async (dispatch: Dispatch<linksPageAction | snackbarAction>) => {\r\n  try {\r\n   dispatch({ type: LinksPageActionTypes.FETCH_LINKS_PAGE })\r\n   const response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n   setTimeout(() => {\r\n    dispatch({\r\n     type: LinksPageActionTypes.FETCH_LINKS_PAGE_SUCCESS,\r\n     payload: [\r\n      {\r\n       img: 'https://servicexservice.com/wp-content/uploads/2021/04/liberty_logo.png',\r\n       description: 'Tax Preparation, File Taxes, Income Tax Filing | Liberty',\r\n       url: 'https://www.libertytax.com/',\r\n      },\r\n      {\r\n       img: 'https://servicexservice.com/wp-content/uploads/2021/04/egnyte_logo.png',\r\n       description: 'One Unified Platform to Govern and Secure Content Everywhere',\r\n       url: 'https://www.egnyte.com/',\r\n      },\r\n     ],\r\n    })\r\n    dispatch({ type: SnackbarActionTypes.SNACKBAR_INFO, payload: 'Links Loaded' })\r\n   }, 2000)\r\n  } catch (error) {\r\n   dispatch({ type: LinksPageActionTypes.FETCH_LINKS_PAGE_FAIL, payload: 'Loading Links Page Error' })\r\n   dispatch({ type: SnackbarActionTypes.SNACKBAR_ERROR, payload: 'Loading Links Page Error' })\r\n  }\r\n }\r\n}\r\n","export interface mainPageState {\r\n title: string\r\n subtitle: string\r\n textArray: Array<string>\r\n loading: boolean\r\n error: null | string\r\n}\r\n\r\nexport enum MainPageActionTypes {\r\n FETCH_MAIN_PAGE = 'FETCH_MAIN_PAGE',\r\n FETCH_MAIN_PAGE_SUCCESS = 'FETCH_MAIN_PAGE_SUCCESS',\r\n FETCH_MAIN_PAGE_FAIL = 'FETCH_MAIN_PAGE_FAIL',\r\n}\r\n\r\ninterface FetchMainPageAction {\r\n type: MainPageActionTypes.FETCH_MAIN_PAGE\r\n}\r\n\r\ninterface FetchMainPageSuccessAction {\r\n type: MainPageActionTypes.FETCH_MAIN_PAGE_SUCCESS\r\n payload: {\r\n  title: string\r\n  subtitle: string\r\n  textArray: Array<string>\r\n }\r\n}\r\n\r\ninterface FetchMainPageFailAction {\r\n type: MainPageActionTypes.FETCH_MAIN_PAGE_FAIL\r\n payload: string\r\n}\r\n\r\nexport type mainPageAction = FetchMainPageAction | FetchMainPageSuccessAction | FetchMainPageFailAction\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport { mainPageAction, MainPageActionTypes } from '../../types/mainpage'\r\nimport { snackbarAction, SnackbarActionTypes } from '../../types/snackbar'\r\n\r\nexport const fetchMainPage = () => {\r\n return async (dispatch: Dispatch<mainPageAction | snackbarAction>) => {\r\n  try {\r\n   dispatch({ type: MainPageActionTypes.FETCH_MAIN_PAGE })\r\n   const response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n   setTimeout(() => {\r\n    dispatch({\r\n     type: MainPageActionTypes.FETCH_MAIN_PAGE_SUCCESS,\r\n     payload: {\r\n      title: 'Hello! Welcome to the new Service2 Portal!',\r\n      subtitle: 'Here you can find important documents, links to your accounts on the applications we use and a helpful calendar detailing everything we have scheduled together.',\r\n      textArray: ['Text line 1', 'Text line 2']\r\n     },\r\n    })\r\n    dispatch({ type: SnackbarActionTypes.SNACKBAR_INFO, payload: 'Portal Loaded' })\r\n   }, 2000)\r\n  } catch (error) {\r\n   dispatch({ type: MainPageActionTypes.FETCH_MAIN_PAGE_FAIL, payload: 'Loading Main Page Error' })\r\n   dispatch({ type: SnackbarActionTypes.SNACKBAR_ERROR, payload: 'Loading Portal Error' })\r\n  }\r\n }\r\n}\r\n","export interface accountState {\r\n firstName: string\r\n lastName: string\r\n email: string\r\n profilePicture: string\r\n loading: boolean\r\n error: null | string\r\n}\r\n\r\nexport enum AccountActionTypes {\r\n FETCH_ACCOUNT = 'FETCH_ACCOUNT',\r\n FETCH_ACCOUNT_SUCCESS = 'FETCH_ACCOUNT_SUCCESS',\r\n FETCH_ACCOUNT_FAIL = 'FETCH_ACCOUNT_FAIL',\r\n}\r\n\r\ninterface FetchAccountAction {\r\n type: AccountActionTypes.FETCH_ACCOUNT\r\n}\r\n\r\ninterface FetchAccountSuccessAction {\r\n type: AccountActionTypes.FETCH_ACCOUNT_SUCCESS\r\n payload: {\r\n  firstName: string\r\n  lastName: string\r\n  email: string\r\n  profilePicture: string\r\n }\r\n}\r\n\r\ninterface FetchAccountFailAction {\r\n type: AccountActionTypes.FETCH_ACCOUNT_FAIL\r\n payload: string\r\n}\r\n\r\nexport type accountAction = FetchAccountAction | FetchAccountSuccessAction | FetchAccountFailAction\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport { accountAction, AccountActionTypes } from '../../types/account'\r\n\r\nexport const fetchAccount = () => {\r\n return async (dispatch: Dispatch<accountAction>) => {\r\n  try {\r\n   dispatch({ type: AccountActionTypes.FETCH_ACCOUNT })\r\n   const response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n   setTimeout(() => {\r\n    dispatch({\r\n     type: AccountActionTypes.FETCH_ACCOUNT_SUCCESS,\r\n     payload: {\r\n      firstName: 'First',\r\n      lastName: 'Last',\r\n      email: 'first@last.email',\r\n      profilePicture: 'https://via.placeholder.com/110',\r\n     },\r\n    })\r\n   }, 2000)\r\n  } catch (error) {\r\n   dispatch({ type: AccountActionTypes.FETCH_ACCOUNT_FAIL, payload: 'Loading Account Error' })\r\n  }\r\n }\r\n}\r\n","export interface Event {\r\n date: string\r\n title: string\r\n color: string\r\n description: string\r\n}\r\n\r\nexport interface ModalEvent {\r\n title: string\r\n description: string\r\n}\r\n\r\nexport interface calendarPageState {\r\n events: Array<Event>\r\n loading: boolean\r\n message: string\r\n error: null | string\r\n}\r\n\r\nexport enum CalendarPageActionTypes {\r\n FETCH_CALENDAR_PAGE = 'FETCH_CALENDAR_PAGE',\r\n FETCH_CALENDAR_PAGE_SUCCESS = 'FETCH_CALENDAR_PAGE_SUCCESS',\r\n FETCH_CALENDAR_PAGE_FAIL = 'FETCH_CALENDAR_PAGE_FAIL',\r\n UPDATE_MESSAGE = 'UPDATE_MESSAGE',\r\n}\r\n\r\ninterface FetchCalendarPageAction {\r\n type: CalendarPageActionTypes.FETCH_CALENDAR_PAGE\r\n}\r\n\r\ninterface FetchCalendarPageSuccessAction {\r\n type: CalendarPageActionTypes.FETCH_CALENDAR_PAGE_SUCCESS\r\n payload: Array<Event>\r\n}\r\n\r\ninterface FetchCalendarPageFailAction {\r\n type: CalendarPageActionTypes.FETCH_CALENDAR_PAGE_FAIL\r\n payload: string\r\n}\r\n\r\ninterface UpdateMessage {\r\n type: CalendarPageActionTypes.UPDATE_MESSAGE\r\n payload: string\r\n}\r\n\r\nexport type calendarPageAction = FetchCalendarPageAction | FetchCalendarPageSuccessAction | FetchCalendarPageFailAction | UpdateMessage\r\n","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport { calendarPageAction, CalendarPageActionTypes, Event } from '../../types/calendarpage'\r\nimport { snackbarAction, SnackbarActionTypes } from '../../types/snackbar'\r\n\r\nexport const fetchCalendarPage = () => {\r\n return async (dispatch: Dispatch<calendarPageAction | snackbarAction>) => {\r\n  try {\r\n   dispatch({ type: CalendarPageActionTypes.FETCH_CALENDAR_PAGE })\r\n   const response = await axios.get<Event[]>('https://jsonplaceholder.typicode.com/users')\r\n   setTimeout(() => {\r\n    dispatch({\r\n     type: CalendarPageActionTypes.FETCH_CALENDAR_PAGE_SUCCESS,\r\n     payload: [\r\n      {\r\n       date: '2021-08-11',\r\n       title: 'Public Event For all customers',\r\n       color: '#e328af',\r\n       description: 'First test Description',\r\n      },\r\n      {\r\n       date: '2021-08-11',\r\n       title: 'Repeating Event for test2',\r\n       color: '#5ecfff',\r\n       description: 'Second test Description',\r\n      },\r\n      {\r\n       date: '2021-08-13',\r\n       title: 'Repeating Event for test2',\r\n       color: '#5ecfff',\r\n       description: 'Third test Description',\r\n      },\r\n     ],\r\n    })\r\n    dispatch({ type: SnackbarActionTypes.SNACKBAR_INFO, payload: 'Calendar Loaded' })\r\n   }, 2000)\r\n  } catch (error) {\r\n   dispatch({ type: CalendarPageActionTypes.FETCH_CALENDAR_PAGE_FAIL, payload: 'Loading Calendar Page Error' })\r\n   dispatch({ type: SnackbarActionTypes.SNACKBAR_ERROR, payload: 'Loading Calendar Error' })\r\n  }\r\n }\r\n}\r\n","import { Dispatch } from 'redux'\r\nimport { snackbarAction, SnackbarActionTypes } from '../../types/snackbar'\r\n\r\nexport const showSuccessSnackbar = (message: string) => {\r\n return (dispatch: Dispatch<snackbarAction>) => {\r\n  dispatch({ type: SnackbarActionTypes.SNACKBAR_SUCCESS, payload: message })\r\n }\r\n}\r\n\r\nexport const showErrorSnackbar = (message: string) => {\r\n return (dispatch: Dispatch<snackbarAction>) => {\r\n  dispatch({ type: SnackbarActionTypes.SNACKBAR_ERROR, payload: message })\r\n }\r\n}\r\n\r\nexport const showInfoSnackbar = (message: string) => {\r\n return (dispatch: Dispatch<snackbarAction>) => {\r\n  dispatch({ type: SnackbarActionTypes.SNACKBAR_INFO, payload: message })\r\n }\r\n}\r\n\r\nexport const clearSnackbar = () => {\r\n return (dispatch: Dispatch<snackbarAction>) => {\r\n  dispatch({ type: SnackbarActionTypes.SNACKBAR_CLEAR })\r\n }\r\n}\r\n","import * as MyAccountPageActionCreators from './myAccountPage'\r\nimport * as LinksPageActionCreators from './linksPage'\r\nimport * as MainPageActionCreators from './mainPage'\r\nimport * as AccountActionCreators from './account'\r\nimport * as CalendarPageActionCreators from './calendarPage'\r\nimport * as SnackbarActionCreators from './Snackbar'\r\n\r\nexport default {\r\n ...MyAccountPageActionCreators,\r\n ...LinksPageActionCreators,\r\n ...MainPageActionCreators,\r\n ...AccountActionCreators,\r\n ...CalendarPageActionCreators,\r\n ...SnackbarActionCreators,\r\n}\r\n","import { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport ActionCreators from '../store/action-creators'\r\n\r\nexport const useActions = () => {\r\n const dispatch = useDispatch()\r\n return bindActionCreators(ActionCreators, dispatch)\r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useEffect } from 'react'\r\nimport { useActions } from '../hooks/auseActions'\r\n\r\nconst useStyles = makeStyles((theme?: any) => ({\r\n h1: {\r\n  fontSize: 40,\r\n  fontWeight: 700,\r\n  marginBottom: 16,\r\n  textAlign: 'center',\r\n },\r\n h5: {\r\n  textAlign: 'center',\r\n  marginBottom: 10,\r\n },\r\n p: {\r\n  textAlign: 'center',\r\n  marginBottom: 10,\r\n },\r\n}))\r\n\r\nconst PagePortal: React.FC = () => {\r\n const classes = useStyles()\r\n const { title, subtitle, loading, error, textArray } = useTypedSelector(state => state.mainPage)\r\n const { fetchMainPage } = useActions()\r\n useEffect(() => {\r\n  fetchMainPage()\r\n }, [])\r\n return (\r\n  <div className={`portal__page ${loading ? 'loading' : ''}`}>\r\n   <h1 className={`${classes.h1} ${loading && 'la'}`}>{loading ? '...' : title}</h1>\r\n   <h5 className={`${classes.h5} ${loading && 'la'}`}>{loading ? '...' : subtitle}</h5>\r\n   {textArray.map((textLine, index) => (\r\n    <p className={classes.h5} key={index}>\r\n     {textLine}\r\n    </p>\r\n   ))}\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PagePortal\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { Table, TableBody, TableCell, TableHead, TableRow, Button } from '@material-ui/core'\r\nimport { LinksPageActionTypes } from '../types/linkspage'\r\nimport { useActions } from '../hooks/auseActions'\r\n\r\nconst PageLinks: React.FC = () => {\r\n const { links, error, loading } = useTypedSelector(state => state.linksPage)\r\n const dispatch = useDispatch()\r\n const { fetchLinksPage } = useActions()\r\n useEffect(() => {\r\n  fetchLinksPage()\r\n\r\n  return () => {\r\n   dispatch({ type: LinksPageActionTypes.UNMOUNT_LINKS_PAGE })\r\n  }\r\n }, [])\r\n return (\r\n  <div className={`portal__page ${loading ? 'loading' : ''}`}>\r\n   {loading && (\r\n    <>\r\n     <div className='lat' />\r\n     <div className='lat' />\r\n     <div className='lat' />\r\n    </>\r\n   )}\r\n   <Table className={`portal__links-table ${loading && 'hidden'}`} size='small' aria-label='Links Table'>\r\n    <TableHead>\r\n     <TableRow>\r\n      <TableCell />\r\n      <TableCell>Description</TableCell>\r\n      <TableCell>Link</TableCell>\r\n     </TableRow>\r\n    </TableHead>\r\n    <TableBody>\r\n     {links.map((row, index) => (\r\n      <TableRow key={index}>\r\n       <TableCell component='th' scope='row'>\r\n        <img src={row.img} alt={row.url} />\r\n       </TableCell>\r\n       <TableCell component='th' scope='row'>\r\n        {row.description}\r\n       </TableCell>\r\n       <TableCell component='th' scope='row'>\r\n        <Button\r\n         variant='contained'\r\n         size='small'\r\n         onClick={e => {\r\n          e.preventDefault()\r\n          window.open(row.url, '_blank')\r\n         }}\r\n        >\r\n         Visit\r\n        </Button>\r\n       </TableCell>\r\n      </TableRow>\r\n     ))}\r\n    </TableBody>\r\n   </Table>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PageLinks\r\n","import React, { FormEvent, useState, useEffect } from 'react'\r\nimport { FormControl, OutlinedInput, InputLabel, Grid, FormHelperText, makeStyles, Button, Theme, CircularProgress, Snackbar } from '@material-ui/core'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useDispatch } from 'react-redux'\r\nimport { MyAccountPageActionTypes } from '../types/myaccountpage'\r\nimport { useActions } from '../hooks/auseActions'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n formControl: {\r\n  marginBottom: theme.spacing(3),\r\n  paddingLeft: 0,\r\n  paddingRight: 0,\r\n },\r\n helper: {\r\n  position: 'absolute',\r\n  bottom: -20,\r\n  left: 0,\r\n  color: '#f44336',\r\n },\r\n legend: {\r\n  fontSize: '1.5rem',\r\n  marginBottom: theme.spacing(2),\r\n },\r\n button: {\r\n  width: '100%',\r\n },\r\n progress: {\r\n  position: 'absolute',\r\n  top: 'calc(50% - 20px)',\r\n  left: 'calc(50% - 20px)',\r\n },\r\n}))\r\n\r\nconst emailREGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\nconst passwordREGEX = new RegExp('((?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^A-Za-z0-9])(?=.{6,}))|((?=.*[a-z])(?=.*[A-Z])(?=.*[^A-Za-z0-9])(?=.{8,}))')\r\n\r\nconst PageMyAccount: React.FC = () => {\r\n const { firstName, lastName, email, loading, profilePicture, error, message } = useTypedSelector(state => state.myAccountPage)\r\n const [validFN, setValidFN] = useState(false)\r\n const [validLN, setValidLN] = useState(false)\r\n const [validE, setValidE] = useState(false)\r\n const [validP, setValidP] = useState(true)\r\n const [validNP, setvalidNP] = useState(true)\r\n const [validCNP, setValidCNP] = useState(true)\r\n const [currentPassword, setCurrentPassword] = useState('')\r\n const [newPassword, setNewPassword] = useState('')\r\n const [confirmNewPassword, setConfirmNewPassword] = useState('')\r\n const classes = useStyles()\r\n const dispatch = useDispatch()\r\n const { fetchMyAccountPage, updateMyAccountPage } = useActions()\r\n\r\n const handleUpdate = (event: FormEvent<EventTarget>, label: string) => {\r\n  const target = event.target as HTMLInputElement\r\n\r\n  if (label === 'email') {\r\n   dispatch({ type: MyAccountPageActionTypes.UPDATE_EMAIL, payload: target.value })\r\n  }\r\n\r\n  if (label === 'lastName') {\r\n   dispatch({ type: MyAccountPageActionTypes.UPDATE_LAST_NAME, payload: target.value })\r\n  }\r\n\r\n  if (label === 'firstName') {\r\n   dispatch({ type: MyAccountPageActionTypes.UPDATE_FIRST_NAME, payload: target.value })\r\n  }\r\n\r\n  if (label === 'password') {\r\n   setCurrentPassword(target.value)\r\n   setValidP(target.value.length > 5)\r\n  }\r\n\r\n  if (label === 'newPassword') {\r\n   setNewPassword(target.value)\r\n   setvalidNP(passwordREGEX.test(target.value))\r\n  }\r\n\r\n  if (label === 'confirmNewPassword') {\r\n   setConfirmNewPassword(target.value)\r\n   setValidCNP(newPassword === target.value)\r\n  }\r\n }\r\n\r\n const checkDataOnLoad = () => {\r\n  setValidE(emailREGEX.test(String(email).toLowerCase()))\r\n  setValidFN(firstName.length >= 1)\r\n  setValidLN(lastName.length >= 1)\r\n }\r\n\r\n useEffect(() => {\r\n  fetchMyAccountPage()\r\n }, [])\r\n\r\n useEffect(\r\n  () => {\r\n   checkDataOnLoad()\r\n  },\r\n  [email, firstName, lastName]\r\n )\r\n\r\n const triggerUpdate = () => {\r\n  if (currentPassword.length >= 1 || newPassword.length >= 1 || confirmNewPassword.length >= 1) {\r\n   if (currentPassword.length <= 5) {\r\n    setValidP(false)\r\n    return false\r\n   }\r\n\r\n   setValidP(true)\r\n\r\n   if (!passwordREGEX.test(newPassword)) {\r\n    setvalidNP(false)\r\n    return false\r\n   }\r\n\r\n   setvalidNP(true)\r\n\r\n   console.log(newPassword === confirmNewPassword)\r\n   if (newPassword !== confirmNewPassword) {\r\n    setValidCNP(false)\r\n    return false\r\n   }\r\n\r\n   setValidCNP(true)\r\n\r\n   if (currentPassword.length >= 6 && passwordREGEX.test(newPassword) && newPassword === confirmNewPassword) {\r\n    updateMyAccountPage({ firstName, lastName, email, profilePicture, password: newPassword })\r\n   }\r\n  } else {\r\n   updateMyAccountPage({ firstName, lastName, email, profilePicture, password: '' })\r\n  }\r\n }\r\n\r\n return (\r\n  <div className={`portal__page`}>\r\n   <form noValidate>\r\n    {loading && <CircularProgress className={classes.progress} />}\r\n    <div className={loading ? 'portal__form-loading' : ''}>\r\n     <Grid container spacing={3}>\r\n      <Grid item xs={12} sm={6}>\r\n       <div className={classes.formControl}>\r\n        <FormControl fullWidth variant='outlined' required>\r\n         <InputLabel htmlFor='first-name'>First Name</InputLabel>\r\n         <OutlinedInput\r\n          error={!validFN}\r\n          labelWidth={105}\r\n          id='first-name'\r\n          value={firstName}\r\n          onInput={e => {\r\n           handleUpdate(e, 'firstName')\r\n          }}\r\n         />\r\n         {!validFN && <FormHelperText className={classes.helper}>Field can't be blank</FormHelperText>}\r\n        </FormControl>\r\n       </div>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6}>\r\n       <div className={classes.formControl}>\r\n        <FormControl fullWidth variant='outlined' required>\r\n         <InputLabel htmlFor='last-name'>Last Name</InputLabel>\r\n         <OutlinedInput\r\n          error={!validLN}\r\n          labelWidth={105}\r\n          id='last-name'\r\n          value={lastName}\r\n          onInput={e => {\r\n           handleUpdate(e, 'lastName')\r\n          }}\r\n         />\r\n         {!validLN && <FormHelperText className={classes.helper}>Field can't be blank</FormHelperText>}\r\n        </FormControl>\r\n       </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n       <div className={classes.formControl}>\r\n        <FormControl fullWidth variant='outlined' required>\r\n         <InputLabel htmlFor='email'>Email</InputLabel>\r\n         <OutlinedInput\r\n          error={!validE}\r\n          labelWidth={65}\r\n          id='email'\r\n          value={email}\r\n          onInput={e => {\r\n           handleUpdate(e, 'email')\r\n          }}\r\n         />\r\n         {!validE && <FormHelperText className={classes.helper}>Enter real email</FormHelperText>}\r\n        </FormControl>\r\n       </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n       <legend className={classes.legend}>Password Change</legend>\r\n       <div className={classes.formControl}>\r\n        <FormControl fullWidth variant='outlined' required>\r\n         <InputLabel htmlFor='current-password'>Current Password</InputLabel>\r\n         <OutlinedInput\r\n          error={!validP}\r\n          labelWidth={145}\r\n          id='current-password'\r\n          onInput={e => {\r\n           handleUpdate(e, 'password')\r\n          }}\r\n         />\r\n         {!validP && <FormHelperText className={classes.helper}>Enter Your current password</FormHelperText>}\r\n        </FormControl>\r\n       </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n       <div className={classes.formControl}>\r\n        <FormControl fullWidth variant='outlined' required>\r\n         <InputLabel htmlFor='new-password'>New Password</InputLabel>\r\n         <OutlinedInput\r\n          error={!validNP}\r\n          labelWidth={125}\r\n          id='new-password'\r\n          onInput={e => {\r\n           handleUpdate(e, 'newPassword')\r\n          }}\r\n         />\r\n         {!validNP && <FormHelperText className={classes.helper}>Min 6 chars and contain: uppercase letter, lowercase letter, symbol </FormHelperText>}\r\n        </FormControl>\r\n       </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n       <div className={classes.formControl}>\r\n        <FormControl fullWidth variant='outlined' required>\r\n         <InputLabel htmlFor='confirm-password'>Confirm new Password</InputLabel>\r\n         <OutlinedInput\r\n          error={!validCNP}\r\n          labelWidth={185}\r\n          id='confirm-password'\r\n          onInput={e => {\r\n           handleUpdate(e, 'confirmNewPassword')\r\n          }}\r\n         />\r\n         {!validCNP && <FormHelperText className={classes.helper}>New Password didn't match Confirm Password</FormHelperText>}\r\n        </FormControl>\r\n       </div>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n       <Button disabled={!validE || !validFN || !validLN} onClick={triggerUpdate} variant='contained' color='primary' size='large' className={classes.button}>\r\n        Save Changes\r\n       </Button>\r\n      </Grid>\r\n     </Grid>\r\n    </div>\r\n   </form>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PageMyAccount\r\n","import React, { useEffect, useState } from 'react'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport listPlugin from '@fullcalendar/list'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useActions } from '../hooks/auseActions'\r\nimport { CircularProgress, Theme, makeStyles, Modal, Fade, Backdrop } from '@material-ui/core'\r\nimport { ModalEvent } from '../types/calendarpage'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n progress: {\r\n  position: 'absolute',\r\n  top: 'calc(50% - 20px)',\r\n  left: 'calc(50% - 20px)',\r\n  zIndex: 10,\r\n },\r\n}))\r\n\r\nconst PageCalendar: React.FC = () => {\r\n const { loading, events } = useTypedSelector(state => state.calendarPage)\r\n const { fetchCalendarPage } = useActions()\r\n const classes = useStyles()\r\n const [showModal, setShowModal] = useState(false)\r\n const [event, setEvent] = useState<ModalEvent>({ title: '', description: '' })\r\n\r\n const eventClick = ({ event }: any) => {\r\n  setEvent({\r\n   title: event.title,\r\n   description: event.extendedProps.description,\r\n  })\r\n  setShowModal(true)\r\n }\r\n\r\n const closeModal = () => {\r\n  setShowModal(false)\r\n }\r\n\r\n useEffect(() => {\r\n  fetchCalendarPage()\r\n }, [])\r\n\r\n return (\r\n  <div className={`portal__page`}>\r\n   {loading && <CircularProgress className={classes.progress} />}\r\n   <div className={loading ? 'portal__calendar-loading portal__calendar maincontainer' : 'portal__calendar maincontainer'}>\r\n    <FullCalendar\r\n     plugins={[dayGridPlugin, interactionPlugin, listPlugin]}\r\n     initialView='dayGridMonth'\r\n     height='auto'\r\n     headerToolbar={{\r\n      left: 'prev,next',\r\n      center: 'title',\r\n      right: 'dayGridMonth,dayGridWeek',\r\n     }}\r\n     events={events}\r\n     eventClick={eventClick}\r\n    />\r\n   </div>\r\n   <Modal\r\n    aria-labelledby='transition-modal-title'\r\n    aria-describedby='transition-modal-description'\r\n    open={showModal}\r\n    className='portal__modal'\r\n    onClose={closeModal}\r\n    closeAfterTransition\r\n    BackdropComponent={Backdrop}\r\n    BackdropProps={{\r\n     timeout: 500,\r\n    }}\r\n   >\r\n    <Fade in={showModal}>\r\n     <div className='portal__modal--box'>\r\n      <button className='portal__modal--close' onClick={closeModal}/>\r\n      <header className='portal__modal--header'>\r\n       <h2 className='portal__modal--title'>{event.title}</h2>\r\n      </header>\r\n      <div className='portal__modal--body'>\r\n       <p>{event.description}</p>\r\n      </div>\r\n     </div>\r\n    </Fade>\r\n   </Modal>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default PageCalendar\r\n","import React from 'react'\r\n\r\nconst PageDocuments: React.FC = () => {\r\n  \r\n  return (\r\n    <div className={`portal__page`}>\r\n      Documents\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PageDocuments\r\n","import React from 'react'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { Tabs, Tab, Button } from '@material-ui/core'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\nimport LinkIcon from '@material-ui/icons/Link'\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday'\r\nimport ExtensionIcon from '@material-ui/icons/Extension'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\nimport { TabPanelProps } from '../types/tabs'\r\nimport { useDispatch } from 'react-redux'\r\nimport { PageActionTypes } from '../types/page'\r\nimport PagePortal from '../pages/PagePortal'\r\nimport PageLinks from '../pages/PageLinks'\r\nimport PageMyAccount from '../pages/PageMyAccount'\r\nimport PageCalendar from '../pages/PageCalendar'\r\nimport PageDocuments from '../pages/PageDocuments'\r\n\r\nconst TabPanel = (props: TabPanelProps) => {\r\n const { children, value, index, ...other } = props\r\n\r\n return (\r\n  <div role='tabpanel' hidden={value !== index} id={`page-${index}`} aria-labelledby={`page-${index}`} {...other}>\r\n   {value === index && <div>{children}</div>}\r\n  </div>\r\n )\r\n}\r\n\r\nconst a11yProps = (index: any) => {\r\n return {\r\n  id: `page-tab-${index}`,\r\n  'aria-controls': `page-tab-${index}`,\r\n }\r\n}\r\n\r\nconst Portal: React.FC = () => {\r\n const dispatch = useDispatch()\r\n const { pageNumber } = useTypedSelector(state => state.page)\r\n const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n  dispatch({ type: PageActionTypes.SWITCH_TAB, payload: newValue })\r\n }\r\n return (\r\n  <div className='portal__main-container'>\r\n   <div className='portal__tabs-nav'>\r\n    <Tabs\r\n     orientation='vertical'\r\n     onChange={handleChange}\r\n     value={pageNumber}\r\n     TabIndicatorProps={{\r\n      style: {\r\n       display: 'none',\r\n      },\r\n     }}\r\n    >\r\n     <Tab\r\n      className='portal__nav-button'\r\n      label={\r\n       <div className='portal__nav-button--inner'>\r\n        <DashboardIcon /> My Account\r\n       </div>\r\n      }\r\n      {...a11yProps(0)}\r\n     />\r\n     <Tab\r\n      className='portal__nav-button'\r\n      label={\r\n       <div className='portal__nav-button--inner'>\r\n        <CalendarTodayIcon /> Calendar\r\n       </div>\r\n      }\r\n      {...a11yProps(1)}\r\n     />\r\n     <Tab\r\n      className='portal__nav-button'\r\n      label={\r\n       <div className='portal__nav-button--inner'>\r\n        <LinkIcon /> Links\r\n       </div>\r\n      }\r\n      {...a11yProps(2)}\r\n     />\r\n     <Tab\r\n      className='portal__nav-button'\r\n      label={\r\n       <div className='portal__nav-button--inner'>\r\n        <ExtensionIcon /> Documents\r\n       </div>\r\n      }\r\n      {...a11yProps(3)}\r\n     />\r\n     <Tab className='portal__nav-button hidden' {...a11yProps(4)} />\r\n    </Tabs>\r\n    <button className='MuiButtonBase-root MuiTab-root MuiTab-textColorInherit portal__nav-button'>\r\n     <span className='MuiTab-wrapper'>\r\n      <div className='portal__nav-button--inner'>\r\n       <ExitToAppIcon /> Log Out\r\n      </div>\r\n     </span>\r\n     <span className='MuiTouchRipple-root' />\r\n    </button>\r\n   </div>\r\n   <div className='portal__tabs-panels'>\r\n    <TabPanel value={pageNumber} index={0}>\r\n     <PageMyAccount />\r\n    </TabPanel>\r\n    <TabPanel value={pageNumber} index={1}>\r\n     <PageCalendar />\r\n    </TabPanel>\r\n    <TabPanel value={pageNumber} index={2}>\r\n     <PageLinks />\r\n    </TabPanel>\r\n    <TabPanel value={pageNumber} index={3}>\r\n     <PageDocuments />\r\n    </TabPanel>\r\n    <TabPanel value={pageNumber} index={4}>\r\n     <PagePortal />\r\n    </TabPanel>\r\n   </div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Portal\r\n","import React from 'react'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\nimport { Snackbar } from '@material-ui/core'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useActions } from '../hooks/auseActions'\r\n\r\nconst Alert = (props: AlertProps) => {\r\n return <MuiAlert elevation={6} variant='filled' {...props} />\r\n}\r\n\r\nconst SuccessNotification: React.FC = () => {\r\n const { successSnackbarOpen, successSnackbarMessage } = useTypedSelector(state => state.snackbar)\r\n const { clearSnackbar } = useActions()\r\n\r\n const handleClose = () => {\r\n  clearSnackbar()\r\n }\r\n\r\n return (\r\n  <Snackbar autoHideDuration={3000} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={successSnackbarOpen} onClose={handleClose}>\r\n   <Alert onClose={handleClose} severity='success'>\r\n    {successSnackbarMessage}\r\n   </Alert>\r\n  </Snackbar>\r\n )\r\n}\r\n\r\nexport default SuccessNotification\r\n","import React from 'react'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\nimport { Snackbar } from '@material-ui/core'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useActions } from '../hooks/auseActions'\r\n\r\nconst Alert = (props: AlertProps) => {\r\n return <MuiAlert elevation={6} variant='filled' {...props} />\r\n}\r\n\r\nconst ErrorNotification: React.FC = () => {\r\n const { errorSnackbarOpen, errorSnackbarMessage } = useTypedSelector(state => state.snackbar)\r\n const { clearSnackbar } = useActions()\r\n\r\n const handleClose = () => {\r\n  clearSnackbar()\r\n }\r\n\r\n return (\r\n  <Snackbar autoHideDuration={3000} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={errorSnackbarOpen} onClose={handleClose}>\r\n   <Alert onClose={handleClose} severity='error'>\r\n    {errorSnackbarMessage}\r\n   </Alert>\r\n  </Snackbar>\r\n )\r\n}\r\n\r\nexport default ErrorNotification\r\n","import React from 'react'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\nimport { Snackbar } from '@material-ui/core'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { useActions } from '../hooks/auseActions'\r\n\r\nconst Alert = (props: AlertProps) => {\r\n return <MuiAlert elevation={6} variant='filled' {...props} />\r\n}\r\n\r\nconst InfoNotification: React.FC = () => {\r\n const { infoSnackbarOpen, infoSnackbarMessage } = useTypedSelector(state => state.snackbar)\r\n const { clearSnackbar } = useActions()\r\n\r\n const handleClose = () => {\r\n  clearSnackbar()\r\n }\r\n\r\n return (\r\n  <Snackbar autoHideDuration={3000} anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={infoSnackbarOpen} onClose={handleClose}>\r\n   <Alert onClose={handleClose} severity='info'>\r\n    {infoSnackbarMessage}\r\n   </Alert>\r\n  </Snackbar>\r\n )\r\n}\r\n\r\nexport default InfoNotification\r\n","import React from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport PortalHeader from './components/PortalHeader'\r\nimport Portal from './components/Portal'\r\nimport { fetchAccount } from './store/action-creators/account'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport { createTheme } from '@material-ui/core'\r\nimport SuccessNotification from './components/SuccessSnackbar'\r\nimport ErrorNotification from './components/ErrorNotification'\r\nimport InfoNotification from './components/InfoNotification'\r\n\r\nconst theme = createTheme({\r\n palette: {\r\n  primary: {\r\n   main: '#47ab82',\r\n  },\r\n },\r\n})\r\nconst App: React.FC = () => {\r\n const dispatch = useDispatch()\r\n useEffect(() => {\r\n  dispatch(fetchAccount())\r\n }, [])\r\n return (\r\n  <ThemeProvider theme={theme}>\r\n   <PortalHeader />\r\n   <Portal />\r\n   <SuccessNotification />\r\n   <ErrorNotification />\r\n   <InfoNotification />\r\n  </ThemeProvider>\r\n )\r\n}\r\n\r\nexport default App\r\n","import { accountAction, accountState, AccountActionTypes } from '../../types/account'\r\n\r\nconst initialState: accountState = {\r\n firstName: '',\r\n lastName: '',\r\n email: '',\r\n profilePicture: '',\r\n loading: true,\r\n error: null,\r\n}\r\n\r\nexport const accountReducer = (state = initialState, action: accountAction): accountState => {\r\n switch (action.type) {\r\n  case AccountActionTypes.FETCH_ACCOUNT:\r\n   return {\r\n    loading: true,\r\n    error: null,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    profilePicture: '',\r\n   }\r\n  case AccountActionTypes.FETCH_ACCOUNT_SUCCESS:\r\n   return {\r\n    loading: false,\r\n    error: null,\r\n    firstName: action.payload.firstName,\r\n    lastName: action.payload.lastName,\r\n    email: action.payload.email,\r\n    profilePicture: action.payload.profilePicture,\r\n   }\r\n  case AccountActionTypes.FETCH_ACCOUNT_FAIL:\r\n   return {\r\n    loading: false,\r\n    error: action.payload,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    profilePicture: '',\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { calendarPageAction, CalendarPageActionTypes, calendarPageState } from '../../types/calendarpage'\r\n\r\nconst initialState: calendarPageState = {\r\n events: [],\r\n loading: true,\r\n error: null,\r\n message: '',\r\n}\r\n\r\nexport const calendarPageReducer = (state = initialState, action: calendarPageAction): calendarPageState => {\r\n switch (action.type) {\r\n  case CalendarPageActionTypes.FETCH_CALENDAR_PAGE:\r\n   return {\r\n    ...state,\r\n    ...{ loading: true, message: '' },\r\n   }\r\n  case CalendarPageActionTypes.FETCH_CALENDAR_PAGE_SUCCESS:\r\n   return {\r\n    events: action.payload,\r\n    loading: false,\r\n    error: null,\r\n    message: '',\r\n   }\r\n  case CalendarPageActionTypes.FETCH_CALENDAR_PAGE_FAIL:\r\n   return {\r\n    ...state,\r\n    ...{ error: action.payload },\r\n   }\r\n  case CalendarPageActionTypes.UPDATE_MESSAGE:\r\n   return {\r\n    ...state,\r\n    ...{ message: action.payload },\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { linksPageAction, linksPageState, LinksPageActionTypes } from '../../types/linkspage'\r\n\r\nconst initialState: linksPageState = {\r\n loading: true,\r\n error: null,\r\n links: [],\r\n}\r\n\r\nexport const linksPageReducer = (state = initialState, action: linksPageAction):linksPageState => {\r\n switch (action.type) {\r\n  case LinksPageActionTypes.FETCH_LINKS_PAGE:\r\n   return {\r\n    loading: true,\r\n    error: null,\r\n    links: [],\r\n   }\r\n  case LinksPageActionTypes.FETCH_LINKS_PAGE_SUCCESS:\r\n   return {\r\n    loading: false,\r\n    error: null,\r\n    links: action.payload,\r\n   }\r\n  case LinksPageActionTypes.FETCH_LINKS_PAGE_FAIL:\r\n   return {\r\n    loading: false,\r\n    error: action.payload,\r\n    links: [],\r\n   }\r\n  case LinksPageActionTypes.UNMOUNT_LINKS_PAGE:\r\n   return {\r\n    loading: true,\r\n    links: [],\r\n    error: null,\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { mainPageState, mainPageAction, MainPageActionTypes } from '../../types/mainpage'\r\n\r\nconst initialState: mainPageState = {\r\n title: '',\r\n subtitle: '',\r\n textArray: [],\r\n error: null,\r\n loading: true,\r\n}\r\n\r\nexport const mainPageReducer = (state = initialState, action: mainPageAction): mainPageState => {\r\n switch (action.type) {\r\n  case MainPageActionTypes.FETCH_MAIN_PAGE:\r\n   return {\r\n    title: '',\r\n    subtitle: '',\r\n    textArray: [],\r\n    error: null,\r\n    loading: true,\r\n   }\r\n  case MainPageActionTypes.FETCH_MAIN_PAGE_SUCCESS:\r\n   return {\r\n    title: action.payload.title,\r\n    subtitle: action.payload.subtitle,\r\n    textArray: action.payload.textArray,\r\n    error: null,\r\n    loading: false,\r\n   }\r\n  case MainPageActionTypes.FETCH_MAIN_PAGE_FAIL:\r\n   return {\r\n    title: '',\r\n    subtitle: '',\r\n    textArray: [],\r\n    error: action.payload,\r\n    loading: false,\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { myAccountPageState, myAccountPageAction, MyAccountPageActionTypes } from '../../types/myaccountpage'\r\n\r\nconst initialState: myAccountPageState = {\r\n firstName: '',\r\n lastName: '',\r\n email: '',\r\n profilePicture: '',\r\n message: '',\r\n loading: true,\r\n error: null,\r\n}\r\n\r\nexport const myAccountPageReducer = (state = initialState, action: myAccountPageAction): myAccountPageState => {\r\n switch (action.type) {\r\n  case MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE:\r\n   return {\r\n    ...state,\r\n    ...{ loading: true },\r\n   }\r\n  case MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE_SUCCESS:\r\n   return {\r\n    firstName: action.payload.firstName,\r\n    lastName: action.payload.lastName,\r\n    email: action.payload.email,\r\n    profilePicture: action.payload.profilePicture,\r\n    message: '',\r\n    loading: false,\r\n    error: null,\r\n   }\r\n  case MyAccountPageActionTypes.FETCH_MY_ACCOUNT_PAGE_FAIL:\r\n   return {\r\n    ...state,\r\n    ...{ error: action.payload },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE:\r\n   return {\r\n    ...state,\r\n    ...{ loading: true, message: '' },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE_SUCCESS:\r\n   return {\r\n    ...state,\r\n    ...{\r\n     loading: false,\r\n    },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_MY_ACCOUNT_PAGE_FAIL:\r\n   return {\r\n    ...state,\r\n    ...{ loading: false, error: action.payload },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_FIRST_NAME:\r\n   return {\r\n    ...state,\r\n    ...{ firstName: action.payload },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_LAST_NAME:\r\n   return {\r\n    ...state,\r\n    ...{ lastName: action.payload },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_EMAIL:\r\n   return {\r\n    ...state,\r\n    ...{ email: action.payload },\r\n   }\r\n  case MyAccountPageActionTypes.UPDATE_MESSAGE:\r\n   return {\r\n    ...state,\r\n    ...{ message: action.payload },\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { PageState, pageAction, PageActionTypes } from '../../types/page'\r\n\r\nconst initialState: PageState = {\r\n pageNumber: 4,\r\n}\r\n\r\nexport const pageReducer = (state = initialState, action: pageAction): PageState => {\r\n switch (action.type) {\r\n  case PageActionTypes.SWITCH_TAB:\r\n   return {\r\n    pageNumber: action.payload,\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { SnackbarState, snackbarAction, SnackbarActionTypes } from '../../types/snackbar'\r\n\r\nconst initialState: SnackbarState = {\r\n successSnackbarOpen: false,\r\n errorSnackbarOpen: false,\r\n infoSnackbarOpen: false,\r\n successSnackbarMessage: '',\r\n errorSnackbarMessage: '',\r\n infoSnackbarMessage: '',\r\n}\r\n\r\nexport const snackbarReducer = (state = initialState, action: snackbarAction): SnackbarState => {\r\n switch (action.type) {\r\n  case SnackbarActionTypes.SNACKBAR_SUCCESS:\r\n   return {\r\n    ...state,\r\n    successSnackbarOpen: true,\r\n    successSnackbarMessage: action.payload,\r\n   }\r\n  case SnackbarActionTypes.SNACKBAR_ERROR:\r\n   return {\r\n    ...state,\r\n    errorSnackbarOpen: true,\r\n    errorSnackbarMessage: action.payload,\r\n   }\r\n  case SnackbarActionTypes.SNACKBAR_INFO:\r\n   return {\r\n    ...state,\r\n    infoSnackbarOpen: true,\r\n    infoSnackbarMessage: action.payload,\r\n   }\r\n  case SnackbarActionTypes.SNACKBAR_CLEAR:\r\n   return {\r\n    ...state,\r\n    successSnackbarOpen: false,\r\n    errorSnackbarOpen: false,\r\n    infoSnackbarOpen: false,\r\n   }\r\n  default:\r\n   return state\r\n }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { accountReducer } from './accountReducer'\r\nimport { calendarPageReducer } from './CalendarPageReducer'\r\nimport { linksPageReducer } from './LinksPageReducer'\r\nimport { mainPageReducer } from './MainPageReducer'\r\nimport { myAccountPageReducer } from './MyAccountPageReducer'\r\nimport { pageReducer } from './PageReducer'\r\nimport { snackbarReducer } from './SnackbarReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n account: accountReducer,\r\n page: pageReducer,\r\n mainPage: mainPageReducer,\r\n linksPage: linksPageReducer,\r\n myAccountPage: myAccountPageReducer,\r\n calendarPage: calendarPageReducer,\r\n snackbar: snackbarReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n","import { applyMiddleware, createStore } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { rootReducer } from './reducers'\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles/index.scss'\r\nimport App from './App'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store'\r\n\r\nReactDOM.render(\r\n <Provider store={store}>\r\n  <App />\r\n </Provider>,\r\n document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}